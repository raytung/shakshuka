on:
  push:
  pull_request:
    types:
      - closed
    branches:
      - main
name: ci
jobs:
  check-clippy:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - run: rustup component add clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  check-format:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - run: cargo fmt

  build:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-20.04
    needs:
      - check-clippy
      - check-format
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo build --release
      - run: cargo publish --dry-run

  build-and-publish-crates:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    needs:
      - check-clippy
      - check-format
    environment: crates
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo build --release
      - run: cargo publish --dry-run
      - run: cargo publish --token ${{ secrets.CRATES_TOKEN }}
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}

  build-and-publish-docker:
    if: github.ref == 'refs/heads/main'
    environment: main
    runs-on: ubuntu-20.04
    needs:
      - check-clippy
      - check-format
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/shakshuka:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
