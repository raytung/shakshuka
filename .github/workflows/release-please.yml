on:
  push:
    branches:
      - main
name: release-please
jobs:
  release-please:
    environment: main
    runs-on: ubuntu-latest
    outputs:
      github_upload_url: ${{ steps.release.outputs.upload_url }}
      release_created: ${{steps.release.outputs.release_created}}
      release_version: ${{steps.release.outputs.major}}.${{steps.release.outputs.minor}}.${{steps.release.outputs.patch}}
    steps:
      - uses: google-github-actions/release-please-action@v2
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: rust

  publish-docker:
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest
    needs: ['release-please']
    steps:
      - uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/shk:${{needs.release-please.outputs.release_version}}, ${{ secrets.DOCKER_HUB_USERNAME }}/shk

      - name: Update repo description
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          short-description: ${{ github.event.repository.description }}
          repository: raytung/shk

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  publish-cargo:
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest
    needs: ['release-please']
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - run: cargo build --release
      - run: cargo publish --token ${{ secrets.CRATES_TOKEN }}
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}

  build-and-publish-binaries:
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ${{ matrix.os }}
    needs: ['release-please']
    strategy:
      matrix:
        build:
          - linux
          - macos
        include:
          - build: linux
            target: x86_64-unknown-linux-musl
          - build: macos
            target: x86_64-apple-darwin
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: apt install (Linux)
        if: matrix.build == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            xz-utils \
            liblz4-tool \
            musl-tools

      - name: Setup Rust toolchains
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Build tarball
        shell: bash
        env:
          SHK_VERSION: ${{ needs.release-please.outputs.release_version }}
          BUILD: ${{ matrix.build }}
          TARGET: ${{ matrix.target }}
        run: ./ci/build-binaries.sh

      - name: Publish release archive to GitHub
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release-please.outputs.github_upload_url }}
          asset_path: ${{ env.ARTIFACT }}
          asset_name: ${{ env.ARTIFACT }}
          asset_content_type: application/octet-stream
